version: "2.3"
services:

# Torrents indexator
  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
      - AUTO_UPDATE=true
    volumes:
      - ./config_jackett:/config
    ports:
      - 9117:9117
    restart: unless-stopped

# Film finder
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow 
    volumes:
      - ./config_radarr:/config
      - /mnt/media/:/downloads 
    ports: 
      - 7878:7878
    restart: unless-stopped

# Music finder
  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow 
    volumes:
      - ./config_lidarr:/config
      - /mnt/media/:/downloads
    ports:
      - 8686:8686
    restart: unless-stopped

# Tor proxy 
  tor-privoxy:
    image: registry.gitlab.com/skobkin/torproxy-obfs4
    container_name: tor-privoxy
    ports:
      - "8118:8118"
      - "9050:9050"
      - "9051:9051"
    volumes:
      - "./config_tor/torrc:/etc/tor/torrc:ro"
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE:-5m}"
        max-file: "${LOG_MAX_FILE:-5}"

# Torrent client
  transmission:
    image: linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - USER=${LOGIN_TRANSMISSION}
      - PASS=${PASSWORD_TRANSMISSION}
      
    volumes: 
      - /mnt/media/torrents/:/downloads
      - /mnt/media/torrents/torrents/:/watch
      - ./config_transmission/:/config
    ports:   
      - 9092:9091
      - 51412:51413
      - 51412:51413/udp
    restart: unless-stopped

# Mediaserver
  plex:
    image: lscr.io/linuxserver/plex #nixta/plex-nvdec
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000 
      - PGID=100 
      - PLEX_CLAIM=${PLEX_CLAIM} 
      - UMASK=022
      - VERSION=latest
      #- NVIDIA_VISIBLE_DEVICES=all           
      #- NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
      - VERSION=docker
    volumes:
      - ./transcode_plex:/transcode
      - ./config_plex:/config 
      - /mnt/media/music:/music
      - /mnt/media/cartoon:/cartoon
      - /mnt/media/pictures:/pictures
      - /mnt/media/serial:/serial
      - /mnt/media/video:/video
      - /mnt/backup/my videos/:/my_video
      - /mnt/backup/photo/:/my_pictures
      - /mnt/backup/backup/vvy_smartphones/camera/:/camera_vvy
      - /mnt/backup/backup/angel_smartphones/camera_device_angel/:/camera_angel
      - /mnt/backup/cources/:/cources
    #devices:  
     # - /dev/nvidia0
     # - /dev/nvidia-caps
     # - /dev/nvidiactl
     # - /dev/nvidia-modeset
     # - /dev/nvidia-uvm
     # - /dev/nvidia-uvm-tools
     # - /dev/nvram
    #runtime: nvidia
    restart: unless-stopped

# Photo and video  analyze
  photoprism:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:impish
    container_name: photoprism
    depends_on:
      - mariadb
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    # restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "2342:2342" # HTTP port (host:container)
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: "insecure"          # INITIAL PASSWORD FOR "admin" USER, MINIMUM 8 CHARACTERS
      PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: https://${EXTERNAL_URL}:2342/  # public server URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false"              # disables storage permission updates on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition using TensorFlow
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification using TensorFlow
      PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW files
      PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW files (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: 85                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: ${MARIADB_DATABASE}  # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: ${MARIADB_USER}      # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: ${MARIADB_PASSWORD} # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
      PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
      ## Run/install on first startup (options: update, gpu, tensorflow, davfs, clitools, clean):
      #PHOTOPRISM_INIT: "gpu tensorflow"
      ## Hardware Video Transcoding (for sponsors only due to high maintenance and support costs):
      PHOTOPRISM_FFMPEG_ENCODER: "software"        # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
      PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      ## Switch to a non-root user after initialization (supported IDs are 33, 50-99, 500-600, and 900-1200):
      #PHOTOPRISM_UID: 1000
      #PHOTOPRISM_GID: 1000
      #PHOTOPRISM_UMASK: 0000
    ## Start as a non-root user before initialization (supported IDs are 33, 50-99, 500-600, and 900-1200):
    # user: "1000:1000"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    devices:
      - /dev/nvidia0
      - /dev/nvidiactl
      - /dev/nvidia-modeset
      - /dev/nvidia-uvm
      - /dev/nvidia-uvm-tools
    working_dir: "/photoprism" # do not change or remove
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      # "/host/folder:/photoprism/folder"                # Example
      - "/mnt/backup/photo:/photoprism/originals"               # Original media files (DO NOT REMOVE)
      - "/mnt/backup/backup/vvy_smartphones:/photoprism/originals/vvy_smartphones" # *Additional* media folders can be mounted like this
      - "/mnt/backup/backup/angel_smartphones/camera_device_angel:/photoprism/originals/angel_smartphones"
      # - "~/Import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals
      - "./config_photoprism/storage:/photoprism/storage"                  # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)

  ## Database Server (recommended)
  ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  mariadb:
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    image: mariadb:10.8
    container_name: mariadb
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - "./config_photoprism/database:/var/lib/mysql" # DO NOT REMOVE
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: ${MARIADB_DATABASE} 
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
